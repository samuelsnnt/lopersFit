"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/profile/page",{

/***/ "(app-pages-browser)/./lib/api.js":
/*!********************!*\
  !*** ./lib/api.js ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; },\n/* harmony export */   authAPI: function() { return /* binding */ authAPI; }\n/* harmony export */ });\ncons;\nasync function login(credentials) {\n    const res = await fetch(\"http://localhost:4000/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(credentials)\n    });\n    return res.json();\n}\nconst getStoredData = (key)=>{\n    if (false) {}\n    try {\n        return JSON.parse(localStorage.getItem(key) || \"null\");\n    } catch (e) {\n        return null;\n    }\n};\nconst setStoredData = (key, data)=>{\n    if (false) {}\n    localStorage.setItem(key, JSON.stringify(data));\n};\nconst removeStoredData = (key)=>{\n    if (false) {}\n    localStorage.removeItem(key);\n};\nclass MockApiClient {\n    setToken(token) {\n        this.token = token;\n        if (true) {\n            localStorage.setItem(\"authToken\", token);\n        }\n    }\n    clearToken() {\n        this.token = null;\n        if (true) {\n            localStorage.removeItem(\"authToken\");\n            localStorage.removeItem(\"userData\");\n        }\n    }\n    async delay() {\n        let ms = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1000;\n        return new Promise((resolve)=>setTimeout(resolve, ms));\n    }\n    generateMockToken(user) {\n        const payload = {\n            id: user.id,\n            username: user.username,\n            email: user.email,\n            exp: Math.floor(Date.now() / 1000) + 7 * 24 * 60 * 60\n        };\n        return btoa(JSON.stringify(payload));\n    }\n    validateToken() {\n        if (!this.token) return null;\n        try {\n            const payload = JSON.parse(atob(this.token));\n            if (payload.exp < Math.floor(Date.now() / 1000)) {\n                this.clearToken();\n                return null;\n            }\n            return {\n                id: payload.id,\n                username: payload.username,\n                email: payload.email,\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString()\n            };\n        } catch (e) {\n            this.clearToken();\n            return null;\n        }\n    }\n    async register(userData) {\n        await this.delay(1500);\n        if (userData.password !== userData.confirmPassword) {\n            return {\n                success: false,\n                error: \"As senhas n\\xe3o coincidem\"\n            };\n        }\n        if (userData.password.length < 6) {\n            return {\n                success: false,\n                error: \"A senha deve ter pelo menos 6 caracteres\"\n            };\n        }\n        const existingUsers = getStoredData(\"registeredUsers\") || [];\n        const userExists = existingUsers.some((user)=>user.email === userData.email || user.username === userData.username);\n        if (userExists) {\n            return {\n                success: false,\n                error: \"Username ou email j\\xe1 est\\xe1 em uso\"\n            };\n        }\n        const newUser = {\n            id: Date.now().toString(),\n            username: userData.username,\n            email: userData.email,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n        };\n        existingUsers.push(newUser);\n        setStoredData(\"registeredUsers\", existingUsers);\n        const token = this.generateMockToken(newUser);\n        return {\n            success: true,\n            data: {\n                user: newUser,\n                token\n            }\n        };\n    }\n    async login(credentials) {\n        await this.delay(1500);\n        const registeredUsers = getStoredData(\"registeredUsers\") || [];\n        const user = registeredUsers.find((user)=>user.email === credentials.email && user.username === credentials.username);\n        if (!user) {\n            return {\n                success: false,\n                error: \"Username, email ou senha incorretos\"\n            };\n        }\n        const token = this.generateMockToken(user);\n        return {\n            success: true,\n            data: {\n                user,\n                token\n            }\n        };\n    }\n    async logout() {\n        await this.delay(500);\n        this.clearToken();\n        return {\n            success: true,\n            message: \"Logout realizado com sucesso\"\n        };\n    }\n    async collectUserData() {\n        await this.delay(800);\n        const user = this.validateToken();\n        if (!user) {\n            return {\n                success: false,\n                error: \"Token inv\\xe1lido ou expirado\"\n            };\n        }\n        const userData = getStoredData(\"userData\") || user;\n        return {\n            success: true,\n            data: {\n                username: userData.username,\n                email: userData.email,\n                avatar: userData.avatar,\n                createdAt: userData.createdAt\n            }\n        };\n    }\n    isAuthenticated() {\n        return !!this.token && !!this.validateToken();\n    }\n    getToken() {\n        return this.token;\n    }\n    constructor(){\n        this.token = null;\n        if (true) {\n            this.token = localStorage.getItem(\"authToken\");\n        }\n    }\n}\nconst apiClient = new MockApiClient();\nconst authAPI = {\n    register: (userData)=>apiClient.register(userData),\n    login: (credentials)=>apiClient.login(credentials),\n    logout: ()=>apiClient.logout(),\n    collectData: ()=>apiClient.collectUserData(),\n    isAuthenticated: ()=>apiClient.isAuthenticated(),\n    getToken: ()=>apiClient.getToken()\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.js\n"));

/***/ })

});